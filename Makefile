#############################################################################
# Makefile for building: ParkSolution
# Generated by qmake (3.0) (Qt 5.2.1)
# Project:  ParkSolution.pro
# Template: subdirs
# Command: F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\bin\qmake.exe -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ParkSolution.pro
#############################################################################

MAKEFILE      = Makefile

first: make_first
QMAKE         = F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\bin\qmake.exe
DEL_FILE      = del
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
INSTALL_FILE  = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
DEL_FILE      = del
SYMLINK       = copy /y
DEL_DIR       = rmdir
MOVE          = move
SUBTARGETS    =  \
		sub-CommonModule \
		sub-DatabaseModule \
		sub-ConfigModule \
		sub-DataParse \
		sub-NetworkModule \
		sub-ParkCustomerCenter \
		sub-TestUI \
		sub-ParkCustomerInfo


sub-CommonModule-qmake_all:  FORCE
	@if not exist CommonModule\ mkdir CommonModule\ & if not exist CommonModule\ exit 1
	cd CommonModule\ && $(QMAKE) D:\ParkSolution\CommonModule\CommonModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile
	cd CommonModule\ && $(MAKE) -f Makefile qmake_all
sub-CommonModule: FORCE
	@if not exist CommonModule\ mkdir CommonModule\ & if not exist CommonModule\ exit 1
	cd CommonModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\CommonModule\CommonModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile
sub-CommonModule-make_first: FORCE
	@if not exist CommonModule\ mkdir CommonModule\ & if not exist CommonModule\ exit 1
	cd CommonModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\CommonModule\CommonModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile 
sub-CommonModule-all: FORCE
	@if not exist CommonModule\ mkdir CommonModule\ & if not exist CommonModule\ exit 1
	cd CommonModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\CommonModule\CommonModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile all
sub-CommonModule-clean: FORCE
	@if not exist CommonModule\ mkdir CommonModule\ & if not exist CommonModule\ exit 1
	cd CommonModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\CommonModule\CommonModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile clean
sub-CommonModule-distclean: FORCE
	@if not exist CommonModule\ mkdir CommonModule\ & if not exist CommonModule\ exit 1
	cd CommonModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\CommonModule\CommonModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile distclean
sub-CommonModule-install_subtargets: FORCE
	@if not exist CommonModule\ mkdir CommonModule\ & if not exist CommonModule\ exit 1
	cd CommonModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\CommonModule\CommonModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile install
sub-CommonModule-uninstall_subtargets: FORCE
	@if not exist CommonModule\ mkdir CommonModule\ & if not exist CommonModule\ exit 1
	cd CommonModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\CommonModule\CommonModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-DatabaseModule-qmake_all:  FORCE
	@if not exist DatabaseModule\ mkdir DatabaseModule\ & if not exist DatabaseModule\ exit 1
	cd DatabaseModule\ && $(QMAKE) D:\ParkSolution\DatabaseModule\DatabaseModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile
	cd DatabaseModule\ && $(MAKE) -f Makefile qmake_all
sub-DatabaseModule: FORCE
	@if not exist DatabaseModule\ mkdir DatabaseModule\ & if not exist DatabaseModule\ exit 1
	cd DatabaseModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DatabaseModule\DatabaseModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile
sub-DatabaseModule-make_first: FORCE
	@if not exist DatabaseModule\ mkdir DatabaseModule\ & if not exist DatabaseModule\ exit 1
	cd DatabaseModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DatabaseModule\DatabaseModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile 
sub-DatabaseModule-all: FORCE
	@if not exist DatabaseModule\ mkdir DatabaseModule\ & if not exist DatabaseModule\ exit 1
	cd DatabaseModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DatabaseModule\DatabaseModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile all
sub-DatabaseModule-clean: FORCE
	@if not exist DatabaseModule\ mkdir DatabaseModule\ & if not exist DatabaseModule\ exit 1
	cd DatabaseModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DatabaseModule\DatabaseModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile clean
sub-DatabaseModule-distclean: FORCE
	@if not exist DatabaseModule\ mkdir DatabaseModule\ & if not exist DatabaseModule\ exit 1
	cd DatabaseModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DatabaseModule\DatabaseModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile distclean
sub-DatabaseModule-install_subtargets: FORCE
	@if not exist DatabaseModule\ mkdir DatabaseModule\ & if not exist DatabaseModule\ exit 1
	cd DatabaseModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DatabaseModule\DatabaseModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile install
sub-DatabaseModule-uninstall_subtargets: FORCE
	@if not exist DatabaseModule\ mkdir DatabaseModule\ & if not exist DatabaseModule\ exit 1
	cd DatabaseModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DatabaseModule\DatabaseModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-ConfigModule-qmake_all:  FORCE
	@if not exist ConfigModule\ mkdir ConfigModule\ & if not exist ConfigModule\ exit 1
	cd ConfigModule\ && $(QMAKE) D:\ParkSolution\ConfigModule\ConfigModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile
	cd ConfigModule\ && $(MAKE) -f Makefile qmake_all
sub-ConfigModule: FORCE
	@if not exist ConfigModule\ mkdir ConfigModule\ & if not exist ConfigModule\ exit 1
	cd ConfigModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ConfigModule\ConfigModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile
sub-ConfigModule-make_first: FORCE
	@if not exist ConfigModule\ mkdir ConfigModule\ & if not exist ConfigModule\ exit 1
	cd ConfigModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ConfigModule\ConfigModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile 
sub-ConfigModule-all: FORCE
	@if not exist ConfigModule\ mkdir ConfigModule\ & if not exist ConfigModule\ exit 1
	cd ConfigModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ConfigModule\ConfigModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile all
sub-ConfigModule-clean: FORCE
	@if not exist ConfigModule\ mkdir ConfigModule\ & if not exist ConfigModule\ exit 1
	cd ConfigModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ConfigModule\ConfigModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile clean
sub-ConfigModule-distclean: FORCE
	@if not exist ConfigModule\ mkdir ConfigModule\ & if not exist ConfigModule\ exit 1
	cd ConfigModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ConfigModule\ConfigModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile distclean
sub-ConfigModule-install_subtargets: FORCE
	@if not exist ConfigModule\ mkdir ConfigModule\ & if not exist ConfigModule\ exit 1
	cd ConfigModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ConfigModule\ConfigModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile install
sub-ConfigModule-uninstall_subtargets: FORCE
	@if not exist ConfigModule\ mkdir ConfigModule\ & if not exist ConfigModule\ exit 1
	cd ConfigModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ConfigModule\ConfigModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-DataParse-qmake_all:  FORCE
	@if not exist DataParse\ mkdir DataParse\ & if not exist DataParse\ exit 1
	cd DataParse\ && $(QMAKE) D:\ParkSolution\DataParse\DataParse.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile
	cd DataParse\ && $(MAKE) -f Makefile qmake_all
sub-DataParse: FORCE
	@if not exist DataParse\ mkdir DataParse\ & if not exist DataParse\ exit 1
	cd DataParse\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DataParse\DataParse.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile
sub-DataParse-make_first: FORCE
	@if not exist DataParse\ mkdir DataParse\ & if not exist DataParse\ exit 1
	cd DataParse\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DataParse\DataParse.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile 
sub-DataParse-all: FORCE
	@if not exist DataParse\ mkdir DataParse\ & if not exist DataParse\ exit 1
	cd DataParse\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DataParse\DataParse.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile all
sub-DataParse-clean: FORCE
	@if not exist DataParse\ mkdir DataParse\ & if not exist DataParse\ exit 1
	cd DataParse\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DataParse\DataParse.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile clean
sub-DataParse-distclean: FORCE
	@if not exist DataParse\ mkdir DataParse\ & if not exist DataParse\ exit 1
	cd DataParse\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DataParse\DataParse.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile distclean
sub-DataParse-install_subtargets: FORCE
	@if not exist DataParse\ mkdir DataParse\ & if not exist DataParse\ exit 1
	cd DataParse\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DataParse\DataParse.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile install
sub-DataParse-uninstall_subtargets: FORCE
	@if not exist DataParse\ mkdir DataParse\ & if not exist DataParse\ exit 1
	cd DataParse\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DataParse\DataParse.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-NetworkModule-qmake_all:  FORCE
	@if not exist NetworkModule\ mkdir NetworkModule\ & if not exist NetworkModule\ exit 1
	cd NetworkModule\ && $(QMAKE) D:\ParkSolution\NetworkModule\NetworkModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile
	cd NetworkModule\ && $(MAKE) -f Makefile qmake_all
sub-NetworkModule: FORCE
	@if not exist NetworkModule\ mkdir NetworkModule\ & if not exist NetworkModule\ exit 1
	cd NetworkModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\NetworkModule\NetworkModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile
sub-NetworkModule-make_first: FORCE
	@if not exist NetworkModule\ mkdir NetworkModule\ & if not exist NetworkModule\ exit 1
	cd NetworkModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\NetworkModule\NetworkModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile 
sub-NetworkModule-all: FORCE
	@if not exist NetworkModule\ mkdir NetworkModule\ & if not exist NetworkModule\ exit 1
	cd NetworkModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\NetworkModule\NetworkModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile all
sub-NetworkModule-clean: FORCE
	@if not exist NetworkModule\ mkdir NetworkModule\ & if not exist NetworkModule\ exit 1
	cd NetworkModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\NetworkModule\NetworkModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile clean
sub-NetworkModule-distclean: FORCE
	@if not exist NetworkModule\ mkdir NetworkModule\ & if not exist NetworkModule\ exit 1
	cd NetworkModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\NetworkModule\NetworkModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile distclean
sub-NetworkModule-install_subtargets: FORCE
	@if not exist NetworkModule\ mkdir NetworkModule\ & if not exist NetworkModule\ exit 1
	cd NetworkModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\NetworkModule\NetworkModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile install
sub-NetworkModule-uninstall_subtargets: FORCE
	@if not exist NetworkModule\ mkdir NetworkModule\ & if not exist NetworkModule\ exit 1
	cd NetworkModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\NetworkModule\NetworkModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-ParkCustomerCenter-qmake_all:  FORCE
	@if not exist ParkCustomerCenter\ mkdir ParkCustomerCenter\ & if not exist ParkCustomerCenter\ exit 1
	cd ParkCustomerCenter\ && $(QMAKE) D:\ParkSolution\ParkCustomerCenter\ParkCustomerCenter.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile
	cd ParkCustomerCenter\ && $(MAKE) -f Makefile qmake_all
sub-ParkCustomerCenter: FORCE
	@if not exist ParkCustomerCenter\ mkdir ParkCustomerCenter\ & if not exist ParkCustomerCenter\ exit 1
	cd ParkCustomerCenter\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerCenter\ParkCustomerCenter.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile
sub-ParkCustomerCenter-make_first: FORCE
	@if not exist ParkCustomerCenter\ mkdir ParkCustomerCenter\ & if not exist ParkCustomerCenter\ exit 1
	cd ParkCustomerCenter\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerCenter\ParkCustomerCenter.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile 
sub-ParkCustomerCenter-all: FORCE
	@if not exist ParkCustomerCenter\ mkdir ParkCustomerCenter\ & if not exist ParkCustomerCenter\ exit 1
	cd ParkCustomerCenter\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerCenter\ParkCustomerCenter.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile all
sub-ParkCustomerCenter-clean: FORCE
	@if not exist ParkCustomerCenter\ mkdir ParkCustomerCenter\ & if not exist ParkCustomerCenter\ exit 1
	cd ParkCustomerCenter\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerCenter\ParkCustomerCenter.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile clean
sub-ParkCustomerCenter-distclean: FORCE
	@if not exist ParkCustomerCenter\ mkdir ParkCustomerCenter\ & if not exist ParkCustomerCenter\ exit 1
	cd ParkCustomerCenter\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerCenter\ParkCustomerCenter.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile distclean
sub-ParkCustomerCenter-install_subtargets: FORCE
	@if not exist ParkCustomerCenter\ mkdir ParkCustomerCenter\ & if not exist ParkCustomerCenter\ exit 1
	cd ParkCustomerCenter\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerCenter\ParkCustomerCenter.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile install
sub-ParkCustomerCenter-uninstall_subtargets: FORCE
	@if not exist ParkCustomerCenter\ mkdir ParkCustomerCenter\ & if not exist ParkCustomerCenter\ exit 1
	cd ParkCustomerCenter\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerCenter\ParkCustomerCenter.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-TestUI-qmake_all:  FORCE
	@if not exist TestUI\ mkdir TestUI\ & if not exist TestUI\ exit 1
	cd TestUI\ && $(QMAKE) D:\ParkSolution\TestUI\TestUI.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile
	cd TestUI\ && $(MAKE) -f Makefile qmake_all
sub-TestUI: FORCE
	@if not exist TestUI\ mkdir TestUI\ & if not exist TestUI\ exit 1
	cd TestUI\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\TestUI\TestUI.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile
sub-TestUI-make_first: FORCE
	@if not exist TestUI\ mkdir TestUI\ & if not exist TestUI\ exit 1
	cd TestUI\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\TestUI\TestUI.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile 
sub-TestUI-all: FORCE
	@if not exist TestUI\ mkdir TestUI\ & if not exist TestUI\ exit 1
	cd TestUI\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\TestUI\TestUI.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile all
sub-TestUI-clean: FORCE
	@if not exist TestUI\ mkdir TestUI\ & if not exist TestUI\ exit 1
	cd TestUI\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\TestUI\TestUI.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile clean
sub-TestUI-distclean: FORCE
	@if not exist TestUI\ mkdir TestUI\ & if not exist TestUI\ exit 1
	cd TestUI\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\TestUI\TestUI.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile distclean
sub-TestUI-install_subtargets: FORCE
	@if not exist TestUI\ mkdir TestUI\ & if not exist TestUI\ exit 1
	cd TestUI\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\TestUI\TestUI.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile install
sub-TestUI-uninstall_subtargets: FORCE
	@if not exist TestUI\ mkdir TestUI\ & if not exist TestUI\ exit 1
	cd TestUI\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\TestUI\TestUI.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-ParkCustomerInfo-qmake_all:  FORCE
	@if not exist ParkCustomerInfo\ mkdir ParkCustomerInfo\ & if not exist ParkCustomerInfo\ exit 1
	cd ParkCustomerInfo\ && $(QMAKE) D:\ParkSolution\ParkCustomerInfo\ParkCustomerInfo.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile
	cd ParkCustomerInfo\ && $(MAKE) -f Makefile qmake_all
sub-ParkCustomerInfo: FORCE
	@if not exist ParkCustomerInfo\ mkdir ParkCustomerInfo\ & if not exist ParkCustomerInfo\ exit 1
	cd ParkCustomerInfo\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerInfo\ParkCustomerInfo.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile
sub-ParkCustomerInfo-make_first: FORCE
	@if not exist ParkCustomerInfo\ mkdir ParkCustomerInfo\ & if not exist ParkCustomerInfo\ exit 1
	cd ParkCustomerInfo\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerInfo\ParkCustomerInfo.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile 
sub-ParkCustomerInfo-all: FORCE
	@if not exist ParkCustomerInfo\ mkdir ParkCustomerInfo\ & if not exist ParkCustomerInfo\ exit 1
	cd ParkCustomerInfo\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerInfo\ParkCustomerInfo.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile all
sub-ParkCustomerInfo-clean: FORCE
	@if not exist ParkCustomerInfo\ mkdir ParkCustomerInfo\ & if not exist ParkCustomerInfo\ exit 1
	cd ParkCustomerInfo\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerInfo\ParkCustomerInfo.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile clean
sub-ParkCustomerInfo-distclean: FORCE
	@if not exist ParkCustomerInfo\ mkdir ParkCustomerInfo\ & if not exist ParkCustomerInfo\ exit 1
	cd ParkCustomerInfo\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerInfo\ParkCustomerInfo.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile distclean
sub-ParkCustomerInfo-install_subtargets: FORCE
	@if not exist ParkCustomerInfo\ mkdir ParkCustomerInfo\ & if not exist ParkCustomerInfo\ exit 1
	cd ParkCustomerInfo\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerInfo\ParkCustomerInfo.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile install
sub-ParkCustomerInfo-uninstall_subtargets: FORCE
	@if not exist ParkCustomerInfo\ mkdir ParkCustomerInfo\ & if not exist ParkCustomerInfo\ exit 1
	cd ParkCustomerInfo\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerInfo\ParkCustomerInfo.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile uninstall

Makefile: ParkSolution.pro F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/win32-g++/qmake.conf F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/spec_pre.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/qdevice.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/device_config.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/common/shell-win32.conf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/qconfig.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_axbase.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_axbase_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_axcontainer.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_axcontainer_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_axserver.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_axserver_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_bluetooth.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_bluetooth_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_bootstrap_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_clucene_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_concurrent.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_concurrent_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_core.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_core_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_declarative.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_declarative_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_designer.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_designer_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_designercomponents_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_gui.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_gui_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_help.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_help_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_multimedia.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_multimedia_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_multimediawidgets.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_multimediawidgets_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_network.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_network_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_nfc.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_nfc_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_opengl.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_opengl_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_openglextensions.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_openglextensions_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_platformsupport_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_positioning.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_positioning_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_printsupport.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_printsupport_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_qml.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_qml_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_qmldevtools_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_qmltest.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_qmltest_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_qtmultimediaquicktools_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_quick.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_quick_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_quickparticles_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_script.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_script_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_scripttools.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_scripttools_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_sensors.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_sensors_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_serialport.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_serialport_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_sql.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_sql_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_svg.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_svg_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_testlib.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_testlib_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_uitools.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_uitools_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_webkit.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_webkit_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_webkitwidgets.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_webkitwidgets_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_widgets.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_widgets_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_winextras.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_winextras_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_xml.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_xml_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_xmlpatterns.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/modules/qt_lib_xmlpatterns_private.pri \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/qt_functions.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/qt_config.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/win32-g++/qmake.conf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/spec_post.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/exclusive_builds.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/default_pre.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/win32/default_pre.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/resolve_config.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/exclusive_builds_post.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/default_post.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/qml_debug.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/declarative_debug.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/win32/rtti.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/warn_on.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/win32/windows.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/testcase_targets.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/exceptions.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/yacc.prf \
		F:/QtSDK/Qt5.2.1/5.2.1/mingw48_32/mkspecs/features/lex.prf \
		ParkSolution.pro
	$(QMAKE) -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ParkSolution.pro
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\spec_pre.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\qdevice.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\device_config.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\common\shell-win32.conf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\qconfig.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_axbase.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_axbase_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_axcontainer.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_axcontainer_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_axserver.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_axserver_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_bluetooth.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_bluetooth_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_bootstrap_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_clucene_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_concurrent.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_concurrent_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_core.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_core_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_declarative.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_declarative_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_designer.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_designer_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_designercomponents_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_gui.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_gui_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_help.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_help_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_multimedia.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_multimedia_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_multimediawidgets.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_multimediawidgets_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_network.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_network_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_nfc.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_nfc_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_opengl.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_opengl_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_openglextensions.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_openglextensions_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_platformsupport_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_positioning.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_positioning_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_printsupport.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_printsupport_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_qml.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_qml_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_qmldevtools_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_qmltest.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_qmltest_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_qtmultimediaquicktools_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_quick.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_quick_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_quickparticles_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_script.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_script_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_scripttools.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_scripttools_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_sensors.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_sensors_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_serialport.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_serialport_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_sql.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_sql_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_svg.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_svg_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_testlib.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_testlib_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_uitools.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_uitools_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_webkit.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_webkit_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_webkitwidgets.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_webkitwidgets_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_widgets.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_widgets_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_winextras.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_winextras_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_xml.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_xml_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_xmlpatterns.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\modules\qt_lib_xmlpatterns_private.pri:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\qt_functions.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\qt_config.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\win32-g++\qmake.conf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\spec_post.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\exclusive_builds.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\default_pre.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\win32\default_pre.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\resolve_config.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\exclusive_builds_post.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\default_post.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\qml_debug.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\declarative_debug.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\win32\rtti.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\warn_on.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\win32\windows.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\testcase_targets.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\exceptions.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\yacc.prf:
F:\QtSDK\Qt5.2.1\5.2.1\mingw48_32\mkspecs\features\lex.prf:
ParkSolution.pro:
qmake: FORCE
	@$(QMAKE) -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ParkSolution.pro

qmake_all: sub-CommonModule-qmake_all sub-DatabaseModule-qmake_all sub-ConfigModule-qmake_all sub-DataParse-qmake_all sub-NetworkModule-qmake_all sub-ParkCustomerCenter-qmake_all sub-TestUI-qmake_all sub-ParkCustomerInfo-qmake_all FORCE

make_first: sub-CommonModule-make_first sub-DatabaseModule-make_first sub-ConfigModule-make_first sub-DataParse-make_first sub-NetworkModule-make_first sub-ParkCustomerCenter-make_first sub-TestUI-make_first sub-ParkCustomerInfo-make_first FORCE
all: sub-CommonModule-all sub-DatabaseModule-all sub-ConfigModule-all sub-DataParse-all sub-NetworkModule-all sub-ParkCustomerCenter-all sub-TestUI-all sub-ParkCustomerInfo-all FORCE
clean: sub-CommonModule-clean sub-DatabaseModule-clean sub-ConfigModule-clean sub-DataParse-clean sub-NetworkModule-clean sub-ParkCustomerCenter-clean sub-TestUI-clean sub-ParkCustomerInfo-clean FORCE
distclean: sub-CommonModule-distclean sub-DatabaseModule-distclean sub-ConfigModule-distclean sub-DataParse-distclean sub-NetworkModule-distclean sub-ParkCustomerCenter-distclean sub-TestUI-distclean sub-ParkCustomerInfo-distclean FORCE
	-$(DEL_FILE) Makefile
install_subtargets: sub-CommonModule-install_subtargets sub-DatabaseModule-install_subtargets sub-ConfigModule-install_subtargets sub-DataParse-install_subtargets sub-NetworkModule-install_subtargets sub-ParkCustomerCenter-install_subtargets sub-TestUI-install_subtargets sub-ParkCustomerInfo-install_subtargets FORCE
uninstall_subtargets: sub-CommonModule-uninstall_subtargets sub-DatabaseModule-uninstall_subtargets sub-ConfigModule-uninstall_subtargets sub-DataParse-uninstall_subtargets sub-NetworkModule-uninstall_subtargets sub-ParkCustomerCenter-uninstall_subtargets sub-TestUI-uninstall_subtargets sub-ParkCustomerInfo-uninstall_subtargets FORCE

sub-CommonModule-debug:
	@if not exist CommonModule\ mkdir CommonModule\ & if not exist CommonModule\ exit 1
	cd CommonModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\CommonModule\CommonModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile debug
sub-DatabaseModule-debug:
	@if not exist DatabaseModule\ mkdir DatabaseModule\ & if not exist DatabaseModule\ exit 1
	cd DatabaseModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DatabaseModule\DatabaseModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile debug
sub-ConfigModule-debug:
	@if not exist ConfigModule\ mkdir ConfigModule\ & if not exist ConfigModule\ exit 1
	cd ConfigModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ConfigModule\ConfigModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile debug
sub-DataParse-debug:
	@if not exist DataParse\ mkdir DataParse\ & if not exist DataParse\ exit 1
	cd DataParse\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DataParse\DataParse.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile debug
sub-NetworkModule-debug:
	@if not exist NetworkModule\ mkdir NetworkModule\ & if not exist NetworkModule\ exit 1
	cd NetworkModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\NetworkModule\NetworkModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile debug
sub-ParkCustomerCenter-debug:
	@if not exist ParkCustomerCenter\ mkdir ParkCustomerCenter\ & if not exist ParkCustomerCenter\ exit 1
	cd ParkCustomerCenter\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerCenter\ParkCustomerCenter.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile debug
sub-TestUI-debug:
	@if not exist TestUI\ mkdir TestUI\ & if not exist TestUI\ exit 1
	cd TestUI\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\TestUI\TestUI.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile debug
sub-ParkCustomerInfo-debug:
	@if not exist ParkCustomerInfo\ mkdir ParkCustomerInfo\ & if not exist ParkCustomerInfo\ exit 1
	cd ParkCustomerInfo\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerInfo\ParkCustomerInfo.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile debug
debug: sub-CommonModule-debug sub-DatabaseModule-debug sub-ConfigModule-debug sub-DataParse-debug sub-NetworkModule-debug sub-ParkCustomerCenter-debug sub-TestUI-debug sub-ParkCustomerInfo-debug

sub-CommonModule-release:
	@if not exist CommonModule\ mkdir CommonModule\ & if not exist CommonModule\ exit 1
	cd CommonModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\CommonModule\CommonModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile release
sub-DatabaseModule-release:
	@if not exist DatabaseModule\ mkdir DatabaseModule\ & if not exist DatabaseModule\ exit 1
	cd DatabaseModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DatabaseModule\DatabaseModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile release
sub-ConfigModule-release:
	@if not exist ConfigModule\ mkdir ConfigModule\ & if not exist ConfigModule\ exit 1
	cd ConfigModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ConfigModule\ConfigModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile release
sub-DataParse-release:
	@if not exist DataParse\ mkdir DataParse\ & if not exist DataParse\ exit 1
	cd DataParse\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DataParse\DataParse.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile release
sub-NetworkModule-release:
	@if not exist NetworkModule\ mkdir NetworkModule\ & if not exist NetworkModule\ exit 1
	cd NetworkModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\NetworkModule\NetworkModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile release
sub-ParkCustomerCenter-release:
	@if not exist ParkCustomerCenter\ mkdir ParkCustomerCenter\ & if not exist ParkCustomerCenter\ exit 1
	cd ParkCustomerCenter\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerCenter\ParkCustomerCenter.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile release
sub-TestUI-release:
	@if not exist TestUI\ mkdir TestUI\ & if not exist TestUI\ exit 1
	cd TestUI\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\TestUI\TestUI.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile release
sub-ParkCustomerInfo-release:
	@if not exist ParkCustomerInfo\ mkdir ParkCustomerInfo\ & if not exist ParkCustomerInfo\ exit 1
	cd ParkCustomerInfo\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerInfo\ParkCustomerInfo.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile release
release: sub-CommonModule-release sub-DatabaseModule-release sub-ConfigModule-release sub-DataParse-release sub-NetworkModule-release sub-ParkCustomerCenter-release sub-TestUI-release sub-ParkCustomerInfo-release

sub-CommonModule-check:
	@if not exist CommonModule\ mkdir CommonModule\ & if not exist CommonModule\ exit 1
	cd CommonModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\CommonModule\CommonModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile check
sub-DatabaseModule-check:
	@if not exist DatabaseModule\ mkdir DatabaseModule\ & if not exist DatabaseModule\ exit 1
	cd DatabaseModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DatabaseModule\DatabaseModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile check
sub-ConfigModule-check:
	@if not exist ConfigModule\ mkdir ConfigModule\ & if not exist ConfigModule\ exit 1
	cd ConfigModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ConfigModule\ConfigModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile check
sub-DataParse-check:
	@if not exist DataParse\ mkdir DataParse\ & if not exist DataParse\ exit 1
	cd DataParse\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\DataParse\DataParse.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile check
sub-NetworkModule-check:
	@if not exist NetworkModule\ mkdir NetworkModule\ & if not exist NetworkModule\ exit 1
	cd NetworkModule\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\NetworkModule\NetworkModule.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile check
sub-ParkCustomerCenter-check:
	@if not exist ParkCustomerCenter\ mkdir ParkCustomerCenter\ & if not exist ParkCustomerCenter\ exit 1
	cd ParkCustomerCenter\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerCenter\ParkCustomerCenter.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile check
sub-TestUI-check:
	@if not exist TestUI\ mkdir TestUI\ & if not exist TestUI\ exit 1
	cd TestUI\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\TestUI\TestUI.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile check
sub-ParkCustomerInfo-check:
	@if not exist ParkCustomerInfo\ mkdir ParkCustomerInfo\ & if not exist ParkCustomerInfo\ exit 1
	cd ParkCustomerInfo\ && ( if not exist Makefile $(QMAKE) D:\ParkSolution\ParkCustomerInfo\ParkCustomerInfo.pro -spec win32-g++ CONFIG+=debug CONFIG+=declarative_debug CONFIG+=qml_debug -o Makefile ) && $(MAKE) -f Makefile check
check: sub-CommonModule-check sub-DatabaseModule-check sub-ConfigModule-check sub-DataParse-check sub-NetworkModule-check sub-ParkCustomerCenter-check sub-TestUI-check sub-ParkCustomerInfo-check
install: install_subtargets  FORCE

uninstall:  uninstall_subtargets FORCE

FORCE:

